name: release

on:
  push:
    tags:
      - '*'
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install taskfile
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Install changie
        env:
          CHANGIE_VERSION: "1.21.1"
        run: >-
            curl -sL https://github.com/miniscruff/changie/releases/download/v${CHANGIE_VERSION}/changie_${CHANGIE_VERSION}_$(go env GOOS)_$(go env GOARCH).tar.gz
            | tar xz -C /usr/local/bin changie
            && chmod +x /usr/local/bin/changie

      - name: Check dependencies & generated files
        run: task check

      - name: Build/download dependencies
        run: task deps

      - name: Build one platform
        run: |
          task build:release OUTPUT=./photofield
          ./photofield -version
          rm ./photofield

      - name: Build & package for reduced set of platforms
        if: github.event_name == 'pull_request'
        run: |
          task package BUILD_OS_ARCH=windows/amd64,linux/amd64,darwin/arm64

      - name: Build & package all platforms
        if: github.event_name == 'push'
        run: |
          task package

      - name: Extract release changelog & title
        id: changelog
        run: |
          (
            changie batch auto &&
            task release:changelog > task-release-changelog.md &&
            echo "TITLE=$(task release:title)" >> $GITHUB_OUTPUT
          ) || (
            echo 'No changelog found, use e.g. `task added` to add some changes' > task-release-changelog.md &&
            echo "TITLE=$(task release:version)" >> $GITHUB_OUTPUT
          )

      - name: Create GitHub Release
        # if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: ${{ steps.changelog.outputs.TITLE }}
          body_path: ./task-release-changelog.md
          files: |
            dist/archives/*.zip
            dist/archives/checksums.txt
          fail_on_unmatched_files: true
          generate_release_notes: true
