name: release

on:
  push:
    tags:
      - '*'
  pull_request:
    types: [opened, synchronize]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write
  packages: write
  id-token: write
  attestations: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install taskfile
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Install changie
        env:
          CHANGIE_VERSION: "1.21.1"
        run: >-
            curl -sL https://github.com/miniscruff/changie/releases/download/v${CHANGIE_VERSION}/changie_${CHANGIE_VERSION}_$(go env GOOS)_$(go env GOARCH).tar.gz
            | tar xz -C /usr/local/bin changie
            && chmod +x /usr/local/bin/changie

      - name: Check dependencies & generated files
        run: task check

      - name: Build/download dependencies
        run: task deps

      - name: Build one platform
        run: |
          task build:release OUTPUT=./photofield
          ./photofield -version
          rm ./photofield

      - name: Build & package for reduced set of platforms
        if: github.event_name == 'pull_request'
        run: |
          task package BUILD_OS_ARCH=windows/amd64,linux/amd64,linux/arm64,darwin/arm64

      - name: Build & package all platforms
        if: github.event_name == 'push'
        run: |
          task package

      - name: Prepare temporary changelog
        if: startsWith(github.ref, 'refs/tags/') != true
        run: |
          changie batch auto || (changie new -k Added -b 'Undocumented changes, use e.g. `task added` to document them' && changie batch auto)

      - name: Extract release changelog & title (PR)
        id: changelog
        run: |
          task release:changelog > .task-release-changelog.md
          echo "TITLE=$(task release:title)" >> $GITHUB_OUTPUT
          echo "VERSION=$(task release:version)" >> $GITHUB_OUTPUT

      - name: Cleanup temporary changelog
        if: startsWith(github.ref, 'refs/tags/') != true
        run: git clean -fd .changes; git checkout -- .changes

      - name: Attest release artifacts
        uses: actions/attest-build-provenance@v2
        with:
          subject-checksums: dist/archives/checksums.txt

      - name: Create GitHub Release
        # if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: ${{ steps.changelog.outputs.TITLE }}
          body_path: .task-release-changelog.md
          tag_name: ${{ steps.changelog.outputs.VERSION }}
          target_commitish: ${{ github.sha }}
          files: |
            dist/archives/*.zip
            dist/archives/checksums.txt
          fail_on_unmatched_files: true
          generate_release_notes: true

      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker multiarch build
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build & push Docker images
        id: docker
        # if: github.event_name == 'push'
        run: |
          task docker:multiarch:push
          echo "DIGEST=$(cat ./.docker-image-id)" >> $GITHUB_OUTPUT

      - name: Attest Docker image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.docker.outputs.DIGEST }}
          push-to-registry: true
